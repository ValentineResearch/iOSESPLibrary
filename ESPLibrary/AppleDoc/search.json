{"Functions.html#/c:@F@ESPV1Mode_isValidMode":{"name":"ESPV1Mode_isValidMode","abstract":"<p>Tells whether the given mode is a valid mode to set the V1 to</p>"},"Functions.html#/c:@F@ESPFrequency_GHz_to_MHz":{"name":"ESPFrequency_GHz_to_MHz","abstract":"<p>Converts GHz frequencies to MHz frequencies with a precision of 3 decimal places in the GHz frequency</p>"},"Functions.html#/c:@F@ESPFrequency_MHz_to_GHz":{"name":"ESPFrequency_MHz_to_GHz","abstract":"<p>Converts MHz frequencies to GHz frequencies with a precision of 3 decimal places in the GHz frequency</p>"},"Functions.html#/c:@F@ESPKMuteTimerValue_toSeconds":{"name":"ESPKMuteTimerValue_toSeconds","abstract":"<p>Converts a KMuteTimerValue enum to an unsigned integer with the value of the number of seconds that the enum value represents</p>"},"Functions.html#/c:@F@ESPKMuteTimerValue_fromSeconds":{"name":"ESPKMuteTimerValue_fromSeconds","abstract":"<p>Converts an unsigned integer to the closest KMuteTimerValue. Values are rounded up.</p>"},"Type%20Definitions/ESPKMuteTimerValue/.html#/c:@EA@ESPKMuteTimerValue@ESPKMuteTimer3":{"name":"ESPKMuteTimer3","abstract":"<p>3 seconds of initial muting</p>"},"Type%20Definitions/ESPKMuteTimerValue/.html#/c:@EA@ESPKMuteTimerValue@ESPKMuteTimer4":{"name":"ESPKMuteTimer4","abstract":"<p>4 seconds of initial muting</p>"},"Type%20Definitions/ESPKMuteTimerValue/.html#/c:@EA@ESPKMuteTimerValue@ESPKMuteTimer5":{"name":"ESPKMuteTimer5","abstract":"<p>5 seconds of initial muting</p>"},"Type%20Definitions/ESPKMuteTimerValue/.html#/c:@EA@ESPKMuteTimerValue@ESPKMuteTimer7":{"name":"ESPKMuteTimer7","abstract":"<p>7 seconds of initial muting</p>"},"Type%20Definitions/ESPKMuteTimerValue/.html#/c:@EA@ESPKMuteTimerValue@ESPKMuteTimer10":{"name":"ESPKMuteTimer10","abstract":"<p>10 seconds of initial muting</p>"},"Type%20Definitions/ESPKMuteTimerValue/.html#/c:@EA@ESPKMuteTimerValue@ESPKMuteTimer15":{"name":"ESPKMuteTimer15","abstract":"<p>15 seconds of initial muting</p>"},"Type%20Definitions/ESPKMuteTimerValue/.html#/c:@EA@ESPKMuteTimerValue@ESPKMuteTimer20":{"name":"ESPKMuteTimer20","abstract":"<p>20 seconds of initial muting</p>"},"Type%20Definitions/ESPKMuteTimerValue/.html#/c:@EA@ESPKMuteTimerValue@ESPKMuteTimer30":{"name":"ESPKMuteTimer30","abstract":"<p>30 seconds of initial muting</p>"},"Type%20Definitions/ESPPostMuteBogeyLockVolumeState/.html#/c:@EA@ESPPostMuteBogeyLockVolumeState@ESPPostMuteBogeyLockVolumeLever":{"name":"ESPPostMuteBogeyLockVolumeLever","abstract":"<p>Bogey-Lock Tone volume uses the control lever = (0)</p>"},"Type%20Definitions/ESPPostMuteBogeyLockVolumeState/.html#/c:@EA@ESPPostMuteBogeyLockVolumeState@ESPPostMuteBogeyLockVolumeKnob":{"name":"ESPPostMuteBogeyLockVolumeKnob","abstract":"<p>Bogey-Lock Tone volume uses the control knob = (1)</p>"},"Type%20Definitions/ESPMuteVolumeState/.html#/c:@EA@ESPMuteVolumeState@ESPMuteVolumeZero":{"name":"ESPMuteVolumeZero","abstract":"<p>Muted volume is set to zero = (0)</p>"},"Type%20Definitions/ESPMuteVolumeState/.html#/c:@EA@ESPMuteVolumeState@ESPMuteVolumeLever":{"name":"ESPMuteVolumeLever","abstract":"<p>Mute volume uses the control lever = (1)</p>"},"Type%20Definitions/ESPBargraphSensitivity/.html#/c:@EA@ESPBargraphSensitivity@ESPBargraphSensitivityResponsive":{"name":"ESPBargraphSensitivityResponsive","abstract":"<p>Bargraph sensitivity is Responsive = (0)</p>"},"Type%20Definitions/ESPBargraphSensitivity/.html#/c:@EA@ESPBargraphSensitivity@ESPBargraphSensitivityNormal":{"name":"ESPBargraphSensitivityNormal","abstract":"<p>Bargraph sensitivity is Normal = (1)</p>"},"Type%20Definitions/ESPConnectMode/.html#/c:@EA@ESPConnectMode@ESPConnectModeManual":{"name":"ESPConnectModeManual","abstract":"<p>Allows you to manually decide which peripheral to connect to. When this mode is used, you must call ESPScanner::connectPeripheral: on your scanner object in order to connect to a discovered peripheral. By default, this mode doesnâ€™t time out unless a timeout is given.</p>"},"Type%20Definitions/ESPConnectMode/.html#/c:@EA@ESPConnectMode@ESPConnectModeStrongest":{"name":"ESPConnectModeStrongest","abstract":"<p>Automatically attempts to connect to the ESP device with the strongest RSSI after searching every 5 seconds, or the duration of the timeout if the timeout is less than 5 seconds. The default timeout for this mode is 5 seconds.</p>"},"Type%20Definitions/ESPConnectMode/.html#/c:@EA@ESPConnectMode@ESPConnectModeRecent":{"name":"ESPConnectModeRecent","abstract":"<p>Automatically attempts to connect to the most recently connected ESP device that was discovered. If no recently connected ESP device is discovered before the scan times out, the scanner will attempt to connect the ESP device with the strongest RSSI. The default timeout for this mode is 5 seconds.</p>"},"Type%20Definitions/ESPRequestTarget/.html#/c:@EA@ESPRequestTarget@ESPRequestTargetValentineOne":{"name":"ESPRequestTargetValentineOne","abstract":"<p>Undocumented</p>"},"Type%20Definitions/ESPRequestTarget/.html#/c:@EA@ESPRequestTarget@ESPRequestTargetConcealedDisplay":{"name":"ESPRequestTargetConcealedDisplay","abstract":"<p>Undocumented</p>"},"Type%20Definitions/ESPRequestTarget/.html#/c:@EA@ESPRequestTarget@ESPRequestTargetRemoteAudio":{"name":"ESPRequestTargetRemoteAudio","abstract":"<p>Undocumented</p>"},"Type%20Definitions/ESPRequestTarget/.html#/c:@EA@ESPRequestTarget@ESPRequestTargetSavvy":{"name":"ESPRequestTargetSavvy","abstract":"<p>Undocumented</p>"},"Type%20Definitions/ESPRequestTarget/.html#/c:@EA@ESPRequestTarget@ESPRequestTargetV1ConnectionLE":{"name":"ESPRequestTargetV1ConnectionLE","abstract":"<p>Undocumented</p>"},"Type%20Definitions/ESPRequestTarget/.html#/c:@EA@ESPRequestTarget@ESPRequestTargetThirdParty1":{"name":"ESPRequestTargetThirdParty1","abstract":"<p>Undocumented</p>"},"Type%20Definitions/ESPRequestTarget/.html#/c:@EA@ESPRequestTarget@ESPRequestTargetThirdParty2":{"name":"ESPRequestTargetThirdParty2","abstract":"<p>Undocumented</p>"},"Type%20Definitions/ESPRequestTarget/.html#/c:@EA@ESPRequestTarget@ESPRequestTargetThirdParty3":{"name":"ESPRequestTargetThirdParty3","abstract":"<p>Undocumented</p>"},"Type%20Definitions/ESPAlertDirection/.html#/c:@EA@ESPAlertDirection@ESPAlertDirectionInvalid":{"name":"ESPAlertDirectionInvalid","abstract":"<p>The direction of an alert data packet with invalid direction data</p>"},"Type%20Definitions/ESPAlertDirection/.html#/c:@EA@ESPAlertDirection@ESPAlertDirectionFront":{"name":"ESPAlertDirectionFront","abstract":"<p>Front direction</p>"},"Type%20Definitions/ESPAlertDirection/.html#/c:@EA@ESPAlertDirection@ESPAlertDirectionSide":{"name":"ESPAlertDirectionSide","abstract":"<p>Side direction</p>"},"Type%20Definitions/ESPAlertDirection/.html#/c:@EA@ESPAlertDirection@ESPAlertDirectionRear":{"name":"ESPAlertDirectionRear","abstract":"<p>Rear direction</p>"},"Type%20Definitions/ESPAlertBand/.html#/c:@EA@ESPAlertBand@ESPAlertBandInvalid":{"name":"ESPAlertBandInvalid","abstract":"<p>The band of an alert data packet with invalid band data</p>"},"Type%20Definitions/ESPAlertBand/.html#/c:@EA@ESPAlertBand@ESPAlertBandLaser":{"name":"ESPAlertBandLaser","abstract":"<p>&ldquo;Laser&rdquo; band is currently not supported by the V1</p>"},"Type%20Definitions/ESPAlertBand/.html#/c:@EA@ESPAlertBand@ESPAlertBandKa":{"name":"ESPAlertBandKa","abstract":"<p>Ka band alert</p>"},"Type%20Definitions/ESPAlertBand/.html#/c:@EA@ESPAlertBand@ESPAlertBandK":{"name":"ESPAlertBandK","abstract":"<p>K band alert</p>"},"Type%20Definitions/ESPAlertBand/.html#/c:@EA@ESPAlertBand@ESPAlertBandX":{"name":"ESPAlertBandX","abstract":"<p>X band alert</p>"},"Type%20Definitions/ESPAlertBand/.html#/c:@EA@ESPAlertBand@ESPAlertBandKu":{"name":"ESPAlertBandKu","abstract":"<p>Ku band alert</p>"},"Type%20Definitions/ESPAlertBand.html":{"name":"ESPAlertBand","abstract":"<p>Constants that the represent the alert bands of alert determined by the Valentine One</p>"},"Type%20Definitions/ESPAlertDirection.html":{"name":"ESPAlertDirection","abstract":"<p>Constants that the represent the direction of an alert determined by the Valentine One</p>"},"Type%20Definitions/ESPRequestTarget.html":{"name":"ESPRequestTarget","abstract":"<p>Constants that represent ESP devices identifiers; these can be used to target a specific ESP device when requesting ESP data.</p>"},"Type%20Definitions.html#/c:ESPDisplayData.h@T@ESPV1Mode":{"name":"ESPV1Mode","abstract":"<p>Undocumented</p>"},"Type%20Definitions.html#/c:ESPFrequency.h@T@ESPFrequencyMHz":{"name":"ESPFrequencyMHz","abstract":"<p>frequency represented in MHz</p>"},"Type%20Definitions.html#/c:ESPFrequency.h@T@ESPFrequencyGHz":{"name":"ESPFrequencyGHz","abstract":"<p>frequency represented in GHz</p>"},"Type%20Definitions.html#/c:ESPPacket.h@T@ESPDeviceID":{"name":"ESPDeviceID","abstract":"<p>Represents the origin/destination fields in an ESPPacket</p>"},"Type%20Definitions.html#/c:ESPPacket.h@T@ESPPacketID":{"name":"ESPPacketID","abstract":"<p>Represents the packet ID in an ESPPacket</p>"},"Type%20Definitions/ESPConnectMode.html":{"name":"ESPConnectMode","abstract":"<p>Flags used for controlling how ESPScanner connect to a peripheral</p>"},"Type%20Definitions/ESPBargraphSensitivity.html":{"name":"ESPBargraphSensitivity","abstract":"<p>Constants that represent possible Bargraph sensitivities values</p>"},"Type%20Definitions/ESPMuteVolumeState.html":{"name":"ESPMuteVolumeState","abstract":"<p>Constants that represent possible mute volume values</p>"},"Type%20Definitions/ESPPostMuteBogeyLockVolumeState.html":{"name":"ESPPostMuteBogeyLockVolumeState","abstract":"<p>Constants that represent possible Bogey-Lock Tone values after pressing mute</p>"},"Type%20Definitions/ESPKMuteTimerValue.html":{"name":"ESPKMuteTimerValue","abstract":"<p>Constants that represent time periods in seconds of automatic muting at the of K-Band alerts</p>"},"Protocols/ESPScannerDelegate.html#/c:objc(pl)ESPScannerDelegate(im)espScannerDidTimeoutScan:":{"name":"-espScannerDidTimeoutScan:","abstract":"<p>Invoked when a scan has timed out</p>","parent_name":"ESPScannerDelegate"},"Protocols/ESPScannerDelegate.html#/c:objc(pl)ESPScannerDelegate(im)espScanner:didFailScanWithError:":{"name":"-espScanner:didFailScanWithError:","abstract":"<p>Invoked when a scan failed</p>","parent_name":"ESPScannerDelegate"},"Protocols/ESPScannerDelegate.html#/c:objc(pl)ESPScannerDelegate(im)espScanner:didDiscoverPeripheral:":{"name":"-espScanner:didDiscoverPeripheral:","abstract":"<p>Invoked when a peripheral is discovered by the scanner</p>","parent_name":"ESPScannerDelegate"},"Protocols/ESPScannerDelegate.html#/c:objc(pl)ESPScannerDelegate(im)espScanner:didUpdatePeripheral:":{"name":"-espScanner:didUpdatePeripheral:","abstract":"<p>Invoked when a discovered peripheral&rsquo;s properties are updated by the scanner</p>","parent_name":"ESPScannerDelegate"},"Protocols/ESPScannerDelegate.html#/c:objc(pl)ESPScannerDelegate(im)espScanner:didFailToConnectPeripheral:error:":{"name":"-espScanner:didFailToConnectPeripheral:error:","abstract":"<p>Invoked when ESPScanner::connectPeripheral: is called on a peripheral and it fails to connect</p>","parent_name":"ESPScannerDelegate"},"Protocols/ESPScannerDelegate.html#/c:objc(pl)ESPScannerDelegate(im)espScanner:didConnectClient:":{"name":"-espScanner:didConnectClient:","abstract":"<p>Invoked when a peripheral has successfully connected and found the ESP service</p>","parent_name":"ESPScannerDelegate"},"Protocols/ESPScannerDelegate.html#/c:objc(pl)ESPScannerDelegate(im)espScanner:didDisconnectClient:error:":{"name":"-espScanner:didDisconnectClient:error:","abstract":"<p>Invoked when a connected ESP client/peripheral is disconnected</p>","parent_name":"ESPScannerDelegate"},"Protocols/ESPClientDelegate.html#/c:objc(pl)ESPClientDelegate(im)espClient:didReceivePacket:":{"name":"-espClient:didReceivePacket:","abstract":"<p>Invoked when an ESP packet is received. This method is called for every received packet, and can be used to get the full information from each received packet.</p>","parent_name":"ESPClientDelegate"},"Protocols/ESPClientDelegate.html#/c:objc(pl)ESPClientDelegate(im)espClient:didReceiveDisplayData:":{"name":"-espClient:didReceiveDisplayData:","abstract":"<p>Invoked when a display data packet is received.</p>","parent_name":"ESPClientDelegate"},"Protocols/ESPClientDelegate.html#/c:objc(pl)ESPClientDelegate(im)espClient:didReceiveAlertTable:":{"name":"-espClient:didReceiveAlertTable:","abstract":"<p>Invoked when an entire alert table is received.</p>","parent_name":"ESPClientDelegate"},"Protocols/ESPClientDelegate.html#/c:objc(pl)ESPClientDelegate(im)espClient:didSetLegacyEnabled:":{"name":"-espClient:didSetLegacyEnabled:","abstract":"<p>Invoked when legacy mode is either enabled or disabled on the ESP device. Legacy mode is assumed to be disabled by default.</p>","parent_name":"ESPClientDelegate"},"Protocols/ESPClientDelegate.html#/c:objc(pl)ESPClientDelegate(im)espClientDidDetectPowerLoss:":{"name":"-espClientDidDetectPowerLoss:","abstract":"<p>Called when no packets have been received from a connected ESP device after 5 seconds.</p>","parent_name":"ESPClientDelegate"},"Protocols/ESPClientDelegate.html":{"name":"ESPClientDelegate","abstract":"<p>Receives events from an ESPClient object</p>"},"Protocols/ESPScannerDelegate.html":{"name":"ESPScannerDelegate","abstract":"<p>Receives events from an ESPScanner object</p>"},"Enums/ESPScannerErrorCode.html#/c:@E@ESPScannerErrorCode@ESPScannerErrorCodeBLEUnsupported":{"name":"ESPScannerErrorCodeBLEUnsupported","abstract":"<p>Bluetooth low-energy is not supported on the current device</p>","parent_name":"ESPScannerErrorCode"},"Enums/ESPScannerErrorCode.html#/c:@E@ESPScannerErrorCode@ESPScannerErrorCodeBLEPoweredOff":{"name":"ESPScannerErrorCodeBLEPoweredOff","abstract":"<p>Bluetooth is not turned on</p>","parent_name":"ESPScannerErrorCode"},"Enums/ESPScannerErrorCode.html#/c:@E@ESPScannerErrorCode@ESPScannerErrorCodeBLENotAuthorized":{"name":"ESPScannerErrorCodeBLENotAuthorized","abstract":"<p>The app doesn&rsquo;t have permission to use bluetooth</p>","parent_name":"ESPScannerErrorCode"},"Enums/ESPScannerErrorCode.html#/c:@E@ESPScannerErrorCode@ESPScannerErrorCodeScannerBusy":{"name":"ESPScannerErrorCodeScannerBusy","abstract":"<p>The ESP scanner is busy doing something else</p>","parent_name":"ESPScannerErrorCode"},"Enums/ESPScannerErrorCode.html#/c:@E@ESPScannerErrorCode@ESPScannerErrorCodeServiceNotFound":{"name":"ESPScannerErrorCodeServiceNotFound","abstract":"<p>The ESP service could not be found on the CBPeripheral</p>","parent_name":"ESPScannerErrorCode"},"Enums/ESPScannerErrorCode.html#/c:@E@ESPScannerErrorCode@ESPScannerErrorCodeTimedOut":{"name":"ESPScannerErrorCodeTimedOut","abstract":"<p>Attempting to connect the peripheral timed out</p>","parent_name":"ESPScannerErrorCode"},"Enums/ESPScannerErrorCode.html#/c:@E@ESPScannerErrorCode@ESPScannerErrorCodeUnexpectedDisconnect":{"name":"ESPScannerErrorCodeUnexpectedDisconnect","abstract":"<p>The ESP device disconnected unexpectedly</p>","parent_name":"ESPScannerErrorCode"},"Enums/ESPDisplayState.html#/c:@E@ESPDisplayState@ESPDisplayStateOff":{"name":"ESPDisplayStateOff","abstract":"<p>Indicates the Valentine One&rsquo;s display is off</p>","parent_name":"ESPDisplayState"},"Enums/ESPDisplayState.html#/c:@E@ESPDisplayState@ESPDisplayStateBlinking":{"name":"ESPDisplayStateBlinking","abstract":"<p>Indicates the Valentine One&rsquo;s display is blinking</p>","parent_name":"ESPDisplayState"},"Enums/ESPDisplayState.html#/c:@E@ESPDisplayState@ESPDisplayStateOn":{"name":"ESPDisplayStateOn","abstract":"<p>Indicates the Valentine One&rsquo;s display is on</p>","parent_name":"ESPDisplayState"},"Enums/ESPRequestErrorCode.html#/c:@E@ESPRequestErrorCode@ESPRequestErrorCodeNoResponse":{"name":"ESPRequestErrorCodeNoResponse","abstract":"<p>No response was received from the target device</p>","parent_name":"ESPRequestErrorCode"},"Enums/ESPRequestErrorCode.html#/c:@E@ESPRequestErrorCode@ESPRequestErrorCodeNotSent":{"name":"ESPRequestErrorCodeNotSent","abstract":"<p>The request could not be sent</p>","parent_name":"ESPRequestErrorCode"},"Enums/ESPRequestErrorCode.html#/c:@E@ESPRequestErrorCode@ESPRequestErrorCodeReceivedBrokenData":{"name":"ESPRequestErrorCodeReceivedBrokenData","abstract":"<p>The received data was not in the correct format, or was missing parts</p>","parent_name":"ESPRequestErrorCode"},"Enums/ESPRequestErrorCode.html#/c:@E@ESPRequestErrorCode@ESPRequestErrorCodeNotProcessed":{"name":"ESPRequestErrorCodeNotProcessed","abstract":"<p>The request could not be processed by the target device, likely because the device&rsquo;s busy queue is full</p>","parent_name":"ESPRequestErrorCode"},"Enums/ESPRequestErrorCode.html#/c:@E@ESPRequestErrorCode@ESPRequestErrorCodeUnsupportedPacket":{"name":"ESPRequestErrorCodeUnsupportedPacket","abstract":"<p>A packet sent by the request is not supported by the target device</p>","parent_name":"ESPRequestErrorCode"},"Enums/ESPRequestErrorCode.html#/c:@E@ESPRequestErrorCode@ESPRequestErrorCodeDataError":{"name":"ESPRequestErrorCodeDataError","abstract":"<p>A sent packet was malformed</p>","parent_name":"ESPRequestErrorCode"},"Enums/ESPRequestErrorCode.html#/c:@E@ESPRequestErrorCode@ESPRequestErrorCodeDisconnected":{"name":"ESPRequestErrorCodeDisconnected","abstract":"<p>The client has been disconnected from the ESP device</p>","parent_name":"ESPRequestErrorCode"},"Enums/ESPRequestErrorCode.html":{"name":"ESPRequestErrorCode","abstract":"<p>Error codes that may occur when requesting data from the ESPClient.</p>"},"Enums/ESPDisplayState.html":{"name":"ESPDisplayState","abstract":"<p>Constants that the represent the Valentine One&rsquo;s display state</p>"},"Enums/ESPScannerErrorCode.html":{"name":"ESPScannerErrorCode","abstract":"<p>Error codes that may be raised when operating the ESPScanner</p>"},"Constants.html#/c:@ESPRequestErrorDomain":{"name":"ESPRequestErrorDomain","abstract":"<p>Undocumented</p>"},"Constants.html#/c:ESPDisplayData.h@ESPV1ModeUnknown":{"name":"ESPV1ModeUnknown","abstract":"<p>Constant that represents the Valentine operating mode is unknown</p>"},"Constants.html#/c:ESPDisplayData.h@ESPV1ModeAllBogeysOrKKa":{"name":"ESPV1ModeAllBogeysOrKKa","abstract":"<p>Constant that represents the Valentine operating mode is either &lsquo;A&rsquo; if using a USA profile or &lsquo;K &amp; Ka&rsquo; if using a Euro profile</p>"},"Constants.html#/c:ESPDisplayData.h@ESPV1ModeLogicOrKa":{"name":"ESPV1ModeLogicOrKa","abstract":"<p>Constant that represents the Valentine operating mode is little &lsquo;L&rsquo; if using a USA profile or &lsquo;Ka&rsquo; if using a Euro profile</p>"},"Constants.html#/c:ESPDisplayData.h@ESPV1ModeAdvancedLogic":{"name":"ESPV1ModeAdvancedLogic","abstract":"<p>Constant that represents the Valentine operating mode is big &lsquo;L&rsquo;</p>"},"Constants.html#/c:ESPPacket.h@ESPDeviceConcealedDisplay":{"name":"ESPDeviceConcealedDisplay","abstract":"<p>Represents the device identifier for a Concealed Display (CD)</p>"},"Constants.html#/c:ESPPacket.h@ESPDeviceRemoteAudio":{"name":"ESPDeviceRemoteAudio","abstract":"<p>Represents the device identifier for a Remote Audio (RA)</p>"},"Constants.html#/c:ESPPacket.h@ESPDeviceSavvy":{"name":"ESPDeviceSavvy","abstract":"<p>Represents the device identifier for a Savvy</p>"},"Constants.html#/c:ESPPacket.h@ESPDeviceThirdParty1":{"name":"ESPDeviceThirdParty1","abstract":"<p>Represents the device identifier for a Third-Party ESP device (0x3)</p>"},"Constants.html#/c:ESPPacket.h@ESPDeviceThirdParty2":{"name":"ESPDeviceThirdParty2","abstract":"<p>Represents the device identifier for a Third-Party ESP device (0x4)</p>"},"Constants.html#/c:ESPPacket.h@ESPDeviceThirdParty3":{"name":"ESPDeviceThirdParty3","abstract":"<p>Represents the device identifier for a Third-Party ESP device (0x5)</p>"},"Constants.html#/c:ESPPacket.h@ESPDeviceV1ConnectionLE":{"name":"ESPDeviceV1ConnectionLE","abstract":"<p>Represents the device identifier for a V1connection LE ESP Device</p>"},"Constants.html#/c:ESPPacket.h@ESPDeviceGeneralBroadcast":{"name":"ESPDeviceGeneralBroadcast","abstract":"<p>Represents the device identifier for a all ESP device (General Broadcast)</p>"},"Constants.html#/c:ESPPacket.h@ESPDeviceV1WithoutChecksum":{"name":"ESPDeviceV1WithoutChecksum","abstract":"<p>Represents the device identifier for a Valentine 1 without checksum</p>"},"Constants.html#/c:ESPPacket.h@ESPDeviceV1WithChecksum":{"name":"ESPDeviceV1WithChecksum","abstract":"<p>Represents the device identifier for a Valentine 1 with checksum</p>"},"Constants.html#/c:ESPPacket.h@ESPPacketReqVersion":{"name":"ESPPacketReqVersion","abstract":"<p>Represents the packet identifier for a version request packet</p>"},"Constants.html#/c:ESPPacket.h@ESPPacketRespVersion":{"name":"ESPPacketRespVersion","abstract":"<p>Represents the packet identifier for a version response packet</p>"},"Constants.html#/c:ESPPacket.h@ESPPacketReqSerialNumber":{"name":"ESPPacketReqSerialNumber","abstract":"<p>Represents the packet identifier for a serial number request packet</p>"},"Constants.html#/c:ESPPacket.h@ESPPacketRespSerialNumber":{"name":"ESPPacketRespSerialNumber","abstract":"<p>Represents the packet identifier for a serial number response packet</p>"},"Constants.html#/c:ESPPacket.h@ESPPacketReqUserBytes":{"name":"ESPPacketReqUserBytes","abstract":"<p>Represents the packet identifier for a user bytes request packet</p>"},"Constants.html#/c:ESPPacket.h@ESPPacketRespUserBytes":{"name":"ESPPacketRespUserBytes","abstract":"<p>Represents the packet identifier for a user bytes request packet</p>"},"Constants.html#/c:ESPPacket.h@ESPPacketReqWriteUserBytes":{"name":"ESPPacketReqWriteUserBytes","abstract":"<p>Represents the packet identifier for a user bytes response packet</p>"},"Constants.html#/c:ESPPacket.h@ESPPacketReqFactoryDefault":{"name":"ESPPacketReqFactoryDefault","abstract":"<p>Represents the packet identifier for a factory default settings request packet</p>"},"Constants.html#/c:ESPPacket.h@ESPPacketReqWriteSweepDefinition":{"name":"ESPPacketReqWriteSweepDefinition","abstract":"<p>Represents the packet identifier for a sweep defintion write request packet</p>"},"Constants.html#/c:ESPPacket.h@ESPPacketReqAllSweepDefinitions":{"name":"ESPPacketReqAllSweepDefinitions","abstract":"<p>Represents the packet identifier for an all sweep defintions request packet</p>"},"Constants.html#/c:ESPPacket.h@ESPPacketRespSweepDefiniton":{"name":"ESPPacketRespSweepDefiniton","abstract":"<p>Represents the packet identifier for a sweep defintions response packet</p>"},"Constants.html#/c:ESPPacket.h@ESPPacketReqDefaultSweeps":{"name":"ESPPacketReqDefaultSweeps","abstract":"<p>Represents the packet identifier for a sweep definition reset request packet</p>"},"Constants.html#/c:ESPPacket.h@ESPPacketReqMaxSweepIndex":{"name":"ESPPacketReqMaxSweepIndex","abstract":"<p>Represents the packet identifier for a max sweep index request packet</p>"},"Constants.html#/c:ESPPacket.h@ESPPacketRespMaxSweepIndex":{"name":"ESPPacketRespMaxSweepIndex","abstract":"<p>Represents the packet identifier for a max sweep index response packet</p>"},"Constants.html#/c:ESPPacket.h@ESPPacketRespSweepWriteResult":{"name":"ESPPacketRespSweepWriteResult","abstract":"<p>Represents the packet identifier for a sweep write result response packet</p>"},"Constants.html#/c:ESPPacket.h@ESPPacketReqSweepSections":{"name":"ESPPacketReqSweepSections","abstract":"<p>Represents the packet identifier for a sweep sections request packet</p>"},"Constants.html#/c:ESPPacket.h@ESPPacketRespSweepSections":{"name":"ESPPacketRespSweepSections","abstract":"<p>Represents the packet identifier for a sweep sections response packet</p>"},"Constants.html#/c:ESPPacket.h@ESPPacketReqDefaultSweepDefinitions":{"name":"ESPPacketReqDefaultSweepDefinitions","abstract":"<p>Represents the packet identifier for a default sweep definitions request packet</p>"},"Constants.html#/c:ESPPacket.h@ESPPacketRespDefaultSweepDefinition":{"name":"ESPPacketRespDefaultSweepDefinition","abstract":"<p>Represents the packet identifier for aa default sweep definitions response packet</p>"},"Constants.html#/c:ESPPacket.h@ESPPacketInfDisplayData":{"name":"ESPPacketInfDisplayData","abstract":"<p>Represents the packet identifier for InfDisplayData packet</p>"},"Constants.html#/c:ESPPacket.h@ESPPacketReqTurnOffMainDisplay":{"name":"ESPPacketReqTurnOffMainDisplay","abstract":"<p>Represents the packet identifier for a turn off main display request packet</p>"},"Constants.html#/c:ESPPacket.h@ESPPacketReqTurnOnMainDisplay":{"name":"ESPPacketReqTurnOnMainDisplay","abstract":"<p>Represents the packet identifier for a turn on main display request packet</p>"},"Constants.html#/c:ESPPacket.h@ESPPacketReqMuteOn":{"name":"ESPPacketReqMuteOn","abstract":"<p>Represents the packet identifier for a mute on request packet</p>"},"Constants.html#/c:ESPPacket.h@ESPPacketReqMuteOff":{"name":"ESPPacketReqMuteOff","abstract":"<p>Represents the packet identifier for a mute off request packet</p>"},"Constants.html#/c:ESPPacket.h@ESPPacketReqChangeMode":{"name":"ESPPacketReqChangeMode","abstract":"<p>Represents the packet identifier for a change mode request packet</p>"},"Constants.html#/c:ESPPacket.h@ESPPacketReqCurrentVolume":{"name":"ESPPacketReqCurrentVolume","abstract":"<p>Represents the packet identifier for a current volume settings request packet</p>"},"Constants.html#/c:ESPPacket.h@ESPPacketRespCurrentVolume":{"name":"ESPPacketRespCurrentVolume","abstract":"<p>Represents the packet identifier for a current volume settings response packet</p>"},"Constants.html#/c:ESPPacket.h@ESPPacketReqWriteVolume":{"name":"ESPPacketReqWriteVolume","abstract":"<p>Represents the packet identifier for a volume write request packet</p>"},"Constants.html#/c:ESPPacket.h@ESPPacketReqStartAlertData":{"name":"ESPPacketReqStartAlertData","abstract":"<p>Represents the packet identifier for a start alert data request packet</p>"},"Constants.html#/c:ESPPacket.h@ESPPacketReqStopAlertData":{"name":"ESPPacketReqStopAlertData","abstract":"<p>Represents the packet identifier for a stop alert data request packet</p>"},"Constants.html#/c:ESPPacket.h@ESPPacketRespAlertData":{"name":"ESPPacketRespAlertData","abstract":"<p>Represents the packet identifier for alert data packet</p>"},"Constants.html#/c:ESPPacket.h@ESPPacketRespDataReceived":{"name":"ESPPacketRespDataReceived","abstract":"<p>Represents the packet identifier for response data packet</p>"},"Constants.html#/c:ESPPacket.h@ESPPacketReqBatteryVoltage":{"name":"ESPPacketReqBatteryVoltage","abstract":"<p>Represents the packet identifier for a battery voltage request packet</p>"},"Constants.html#/c:ESPPacket.h@ESPPacketRespBatteryVoltage":{"name":"ESPPacketRespBatteryVoltage","abstract":"<p>Represents the packet identifier for a battery voltage response packet</p>"},"Constants.html#/c:ESPPacket.h@ESPPacketRespUnsupportedPacket":{"name":"ESPPacketRespUnsupportedPacket","abstract":"<p>Represents the packet identifier for a unsupported-packet packet</p>"},"Constants.html#/c:ESPPacket.h@ESPPacketRespRequestNotProcessed":{"name":"ESPPacketRespRequestNotProcessed","abstract":"<p>Represents the packet identifier for a not processed packet</p>"},"Constants.html#/c:ESPPacket.h@ESPPacketInfV1Busy":{"name":"ESPPacketInfV1Busy","abstract":"<p>Represents the packet identifier for a inf v1 busy packet</p>"},"Constants.html#/c:ESPPacket.h@ESPPacketRespDataError":{"name":"ESPPacketRespDataError","abstract":"<p>Represents the packet identifier for a response data error packet</p>"},"Constants.html#/c:ESPPacket.h@ESPPacketReqSavvyStatus":{"name":"ESPPacketReqSavvyStatus","abstract":"<p>Represents the packet identifier for a savvy status request packet</p>"},"Constants.html#/c:ESPPacket.h@ESPPacketRespSavvyStatus":{"name":"ESPPacketRespSavvyStatus","abstract":"<p>Represents the packet identifier for a savvy status request packet</p>"},"Constants.html#/c:ESPPacket.h@ESPPacketReqVehicleSpeed":{"name":"ESPPacketReqVehicleSpeed","abstract":"<p>Represents the packet identifier for a vehicle speed request packet</p>"},"Constants.html#/c:ESPPacket.h@ESPPacketRespVehicleSpeed":{"name":"ESPPacketRespVehicleSpeed","abstract":"<p>Represents the packet identifier for a vehicle speed response packet</p>"},"Constants.html#/c:ESPPacket.h@ESPPacketReqOverrideThumbwheel":{"name":"ESPPacketReqOverrideThumbwheel","abstract":"<p>Represents the packet identifier for a override thumbnail request packet</p>"},"Constants.html#/c:ESPPacket.h@ESPPacketReqSetSavvyUnmuteEnable":{"name":"ESPPacketReqSetSavvyUnmuteEnable","abstract":"<p>Represents the packet identifier for a set savvy unmute enabled request packet</p>"},"Constants.html#/c:@ESPScannerErrorDomain":{"name":"ESPScannerErrorDomain","abstract":"<p>Undocumented</p>"},"Classes/ESPUserBytes.html#/c:objc(cs)ESPUserBytes(im)init":{"name":"-init","abstract":"<p>Initializes user bytes with default values</p>","parent_name":"ESPUserBytes"},"Classes/ESPUserBytes.html#/c:objc(cs)ESPUserBytes(im)initWithV1Version:":{"name":"-initWithV1Version:","abstract":"<p>Initializes user bytes with default values and the provided v1 version.</p>","parent_name":"ESPUserBytes"},"Classes/ESPUserBytes.html#/c:objc(cs)ESPUserBytes(im)initWithData:v1Version:":{"name":"-initWithData:v1Version:","abstract":"<p>Initializes user bytes with the payload data of a received packet</p>","parent_name":"ESPUserBytes"},"Classes/ESPUserBytes.html#/c:objc(cs)ESPUserBytes(im)initWithUserBytes:":{"name":"-initWithUserBytes:","abstract":"<p>Initializes user bytes by copying data from another user bytes object</p>","parent_name":"ESPUserBytes"},"Classes/ESPUserBytes.html#/c:objc(cs)ESPUserBytes(im)isEqualToUserBytes:":{"name":"-isEqualToUserBytes:","abstract":"<p>Tells whether the the user bytes are equal to another set of user bytes</p>","parent_name":"ESPUserBytes"},"Classes/ESPUserBytes.html#/c:objc(cs)ESPUserBytes(im)resetToDefaults":{"name":"-resetToDefaults","abstract":"<p>Sets all the user bytes back to 0xFF, the default value</p>","parent_name":"ESPUserBytes"},"Classes/ESPUserBytes.html#/c:objc(cs)ESPUserBytes(py)data":{"name":"data","abstract":"<p>The full payload data of the user bytes</p>","parent_name":"ESPUserBytes"},"Classes/ESPUserBytes.html#/c:objc(cs)ESPUserBytes(py)v1Version":{"name":"v1Version","abstract":"<p>Version of the V1 this instance of user bytes belongs too</p>","parent_name":"ESPUserBytes"},"Classes/ESPUserBytes.html#/c:objc(cs)ESPUserBytes(py)XBandOn":{"name":"XBandOn","abstract":"<p>Toggles X band detection</p>","parent_name":"ESPUserBytes"},"Classes/ESPUserBytes.html#/c:objc(cs)ESPUserBytes(py)KBandOn":{"name":"KBandOn","abstract":"<p>Toggles K band detection</p>","parent_name":"ESPUserBytes"},"Classes/ESPUserBytes.html#/c:objc(cs)ESPUserBytes(py)KaBandOn":{"name":"KaBandOn","abstract":"<p>Toggles Ka band detection</p>","parent_name":"ESPUserBytes"},"Classes/ESPUserBytes.html#/c:objc(cs)ESPUserBytes(py)laserOn":{"name":"laserOn","abstract":"<p>Toggles laser detection</p>","parent_name":"ESPUserBytes"},"Classes/ESPUserBytes.html#/c:objc(cs)ESPUserBytes(py)bargraphSensitivity":{"name":"bargraphSensitivity","abstract":"<p>Adjusts the response of the signal-strength meter for Ka band</p>","parent_name":"ESPUserBytes"},"Classes/ESPUserBytes.html#/c:objc(cs)ESPUserBytes(py)KaFalseGuardOn":{"name":"KaFalseGuardOn","abstract":"<p>Toggles the Ka False-Alarm Guard feature</p>","parent_name":"ESPUserBytes"},"Classes/ESPUserBytes.html#/c:objc(cs)ESPUserBytes(py)KMutingOn":{"name":"KMutingOn","abstract":"<p>Toggles initial muting of K-band under certain circumstances</p>","parent_name":"ESPUserBytes"},"Classes/ESPUserBytes.html#/c:objc(cs)ESPUserBytes(py)muteVolumeState":{"name":"muteVolumeState","abstract":"<p>Controls whether muted volume can be adjusted via the control lever on the V1</p>","parent_name":"ESPUserBytes"},"Classes/ESPUserBytes.html#/c:objc(cs)ESPUserBytes(py)postMuteBogeyLockVolumeState":{"name":"postMuteBogeyLockVolumeState","abstract":"<p>Controls how the volume of any Bogey Lock Tones are adjusted after pressing mute</p>","parent_name":"ESPUserBytes"},"Classes/ESPUserBytes.html#/c:objc(cs)ESPUserBytes(py)KMuteTimer":{"name":"KMuteTimer","abstract":"<p>Sets a time period of automatic muting of K-band alerts</p>","parent_name":"ESPUserBytes"},"Classes/ESPUserBytes.html#/c:objc(cs)ESPUserBytes(py)KInitialUnmute4LightsOn":{"name":"KInitialUnmute4LightsOn","abstract":"<p>Toggles an automatic override of the K mute timer if the K-band signal strength exceeds 4 LEDs</p>","parent_name":"ESPUserBytes"},"Classes/ESPUserBytes.html#/c:objc(cs)ESPUserBytes(py)KPersistantUnmute6LightsOn":{"name":"KPersistantUnmute6LightsOn","abstract":"<p>Toggles an automatic override of the K mute timer if the K-band signal strength slowly rises to 6 LEDs</p>","parent_name":"ESPUserBytes"},"Classes/ESPUserBytes.html#/c:objc(cs)ESPUserBytes(py)KRearMuteOn":{"name":"KRearMuteOn","abstract":"<p>Toggles automatic muting of K-band alerts from the rear</p>","parent_name":"ESPUserBytes"},"Classes/ESPUserBytes.html#/c:objc(cs)ESPUserBytes(py)KuBandOn":{"name":"KuBandOn","abstract":"<p>Toggles Ku band detection</p>","parent_name":"ESPUserBytes"},"Classes/ESPUserBytes.html#/c:objc(cs)ESPUserBytes(py)popOn":{"name":"popOn","abstract":"<p>Toggles POP radar detection</p>","parent_name":"ESPUserBytes"},"Classes/ESPUserBytes.html#/c:objc(cs)ESPUserBytes(py)euroOn":{"name":"euroOn","abstract":"<p>Toggles Euro Mode</p>","parent_name":"ESPUserBytes"},"Classes/ESPUserBytes.html#/c:objc(cs)ESPUserBytes(py)euroXBandOn":{"name":"euroXBandOn","abstract":"<p>Toggles Euro X band detection</p>","parent_name":"ESPUserBytes"},"Classes/ESPUserBytes.html#/c:objc(cs)ESPUserBytes(py)filterOn":{"name":"filterOn","abstract":"<p>Toggles the Traffic Monitor Filter/Junk-K Fighter</p>","parent_name":"ESPUserBytes"},"Classes/ESPUserBytes.html#/c:objc(cs)ESPUserBytes(py)forceLegacyCD":{"name":"forceLegacyCD","abstract":"<p>Toggles forced Legacy (pre-ESP) Concealed Display operation</p>","parent_name":"ESPUserBytes"},"Classes/ESPUserBytes.html#/c:objc(cs)ESPUserBytes(py)muteToMuteVolume":{"name":"muteToMuteVolume","abstract":"<p>Toggles Mute to Muted Volume</p>","parent_name":"ESPUserBytes"},"Classes/ESPUserBytes.html#/c:objc(cs)ESPUserBytes(py)BogeyLockToneLoadAfterMuting":{"name":"BogeyLockToneLoadAfterMuting","abstract":"<p>Toggles load bogey lock tones after muting</p>","parent_name":"ESPUserBytes"},"Classes/ESPUserBytes.html#/c:objc(cs)ESPUserBytes(py)MuteXAndKRear":{"name":"MuteXAndKRear","abstract":"<p>Toggles automatic X &amp; K rear alert muting</p>","parent_name":"ESPUserBytes"},"Classes/ESPUserBytes.html#/c:objc(cs)ESPUserBytes(py)LaserRear":{"name":"LaserRear","abstract":"<p>Toggles rear Laser alerts</p>","parent_name":"ESPUserBytes"},"Classes/ESPUserBytes.html#/c:objc(cs)ESPUserBytes(py)CustomFrequencies":{"name":"CustomFrequencies","abstract":"<p>Toglles Custom Frequencies</p>","parent_name":"ESPUserBytes"},"Classes/ESPScanner.html#/c:objc(cs)ESPScanner(im)initWithDelegate:":{"name":"-initWithDelegate:","abstract":"<p>Initializes the ESPScanner object with a ESPScannerDelegate instance</p>","parent_name":"ESPScanner"},"Classes/ESPScanner.html#/c:objc(cs)ESPScanner(im)startScan":{"name":"-startScan","abstract":"<p>Starts scanning for ESP devices, or does nothing if already scanning. This method will not automatically connect any peripherals while scanning. Calling this method also clears any discovered peripherals.</p>","parent_name":"ESPScanner"},"Classes/ESPScanner.html#/c:objc(cs)ESPScanner(im)startScanWithMode:":{"name":"-startScanWithMode:","abstract":"<p>Starts scanning for ESP devices with a given mode, or does nothing if already scanning. Calling this method also clears any discovered peripherals.</p>","parent_name":"ESPScanner"},"Classes/ESPScanner.html#/c:objc(cs)ESPScanner(im)startScanWithMode:timeout:":{"name":"-startScanWithMode:timeout:","abstract":"<p>Starts scanning for ESP devices and stops the scan after a given amount of time. Calling this method also clears any discovered peripherals</p>","parent_name":"ESPScanner"},"Classes/ESPScanner.html#/c:objc(cs)ESPScanner(im)startScanForDeviceWithUUID:timeout:":{"name":"-startScanForDeviceWithUUID:timeout:","abstract":"<p>Starts scanning for the ESP device that has a UUID which matches the given UUID. If UUIDString is not nil, then peripherals will only be discovered if they match the UUID. If the ESP device with a matching UUID is found, the scanner will automatically try to connect to it. Calling this method also clears any discovered peripherals.</p>","parent_name":"ESPScanner"},"Classes/ESPScanner.html#/c:objc(cs)ESPScanner(im)stopScan":{"name":"-stopScan","abstract":"<p>Stops scanning for ESP devices, or does nothing if the scanner is not scanning</p>","parent_name":"ESPScanner"},"Classes/ESPScanner.html#/c:objc(cs)ESPScanner(im)connectPeripheral:":{"name":"-connectPeripheral:","abstract":"<p>Connects a discovered peripheral</p>","parent_name":"ESPScanner"},"Classes/ESPScanner.html#/c:objc(cs)ESPScanner(im)disconnectClient":{"name":"-disconnectClient","abstract":"<p>Disconnects the connected ESP device/peripheral and disconnects any peripheral in the process of connecting</p>","parent_name":"ESPScanner"},"Classes/ESPScanner.html#/c:objc(cs)ESPScanner(im)RSSIOfPeripheral:":{"name":"-RSSIOfPeripheral:","abstract":"<p>Gives the RSSI of the specified peripheral (if the RSSI is known)</p>","parent_name":"ESPScanner"},"Classes/ESPScanner.html#/c:objc(cs)ESPScanner(im)lastReportDateOfPeripheral:":{"name":"-lastReportDateOfPeripheral:","abstract":"<p>Gives the date/time of the last time the specified peripheral was reported</p>","parent_name":"ESPScanner"},"Classes/ESPScanner.html#/c:objc(cs)ESPScanner(im)peripheralWithUUID:":{"name":"-peripheralWithUUID:","abstract":"<p>Finds the discovered peripheral with the given UUID, if it exists</p>","parent_name":"ESPScanner"},"Classes/ESPScanner.html#/c:objc(cs)ESPScanner(im)clearRecentUUIDs":{"name":"-clearRecentUUIDs","abstract":"<p>Clears the list of recent ESP device UUIDs. - see: ESPScanner::recentDeviceUUIDs</p>","parent_name":"ESPScanner"},"Classes/ESPScanner.html#/c:objc(cs)ESPScanner(im)removeRecentUUID:":{"name":"-removeRecentUUID:","abstract":"<p>Removes a recent device with the given UUID. - see: ESPScanner::recentDeviceUUIDs</p>","parent_name":"ESPScanner"},"Classes/ESPScanner.html#/c:objc(cs)ESPScanner(py)delegate":{"name":"delegate","abstract":"<p>ESPScannerDelegate delegate that will get invoked for ESPScanner events</p>","parent_name":"ESPScanner"},"Classes/ESPScanner.html#/c:objc(cs)ESPScanner(py)clientClass":{"name":"clientClass","abstract":"<p>The class to use to instantiate the connected ESPClient</p>","parent_name":"ESPScanner"},"Classes/ESPScanner.html#/c:objc(cs)ESPScanner(py)scanning":{"name":"scanning","abstract":"<p>Tells whether the scanner is currently scanning or not</p>","parent_name":"ESPScanner"},"Classes/ESPScanner.html#/c:objc(cs)ESPScanner(py)scanStartDate":{"name":"scanStartDate","abstract":"<p>The timestamp of when the scan began. This property is nil if the scanner is not scanning</p>","parent_name":"ESPScanner"},"Classes/ESPScanner.html#/c:objc(cs)ESPScanner(py)timeout":{"name":"timeout","abstract":"<p>The timeout value for the current scan, in seconds. A 0 or negative value means there is no timeout, or that the scanner is not currently scanning</p>","parent_name":"ESPScanner"},"Classes/ESPScanner.html#/c:objc(cs)ESPScanner(py)connecting":{"name":"connecting","abstract":"<p>Tells whether the scanner is attempting to connect a peripheral or not</p>","parent_name":"ESPScanner"},"Classes/ESPScanner.html#/c:objc(cs)ESPScanner(py)discoveredPeripherals":{"name":"discoveredPeripherals","abstract":"<p>An array of the discovered peripherals</p>","parent_name":"ESPScanner"},"Classes/ESPScanner.html#/c:objc(cs)ESPScanner(py)mostRecentPeripheral":{"name":"mostRecentPeripheral","abstract":"<p>The most recently connected to peripheral of the discovered peripherals, or nil if no recent peripheral has been discovered. This property is found by matching the UUIDs in recentDeviceUUIDs with a discovered peripheral&rsquo;s UUID.</p>","parent_name":"ESPScanner"},"Classes/ESPScanner.html#/c:objc(cs)ESPScanner(py)strongestPeripheral":{"name":"strongestPeripheral","abstract":"<p>The peripheral with the strongest signal of the discovered peripherals, or nil if no peripherals have been discovered</p>","parent_name":"ESPScanner"},"Classes/ESPScanner.html#/c:objc(cs)ESPScanner(py)connectedClient":{"name":"connectedClient","abstract":"<p>The connected ESPClient, or nil if no peripheral has been connected</p>","parent_name":"ESPScanner"},"Classes/ESPScanner.html#/c:objc(cs)ESPScanner(py)userDefaults":{"name":"userDefaults","abstract":"<p>The NSUserDefaults used to save scanner settings. The default &ldquo;suite name&rdquo; is com.Valentine.ESPLibrary</p>","parent_name":"ESPScanner"},"Classes/ESPScanner.html#/c:objc(cs)ESPScanner(py)recentDeviceUUIDs":{"name":"recentDeviceUUIDs","abstract":"<p>The most recently connected to ESP devices&rsquo; UUIDs, with the most recent device&rsquo;s UUID being the first in the array. If this array is set to an array larger than maximumRecentDevices, then elements are removed from the end of the array until its count is the same as maximumRecentDevices. This list is retrieved from and stored in the userDefaults object. - see: ESPScanner::userDefaults</p>","parent_name":"ESPScanner"},"Classes/ESPScanner.html#/c:objc(cs)ESPScanner(py)automaticallyRemembersDevices":{"name":"automaticallyRemembersDevices","abstract":"<p>Controls whether the scanner should automatically add a device&rsquo;s UUID to the list of recent devices after connecting. By default this value is YES.</p>","parent_name":"ESPScanner"},"Classes/ESPScanner.html#/c:objc(cs)ESPScanner(py)maximumRecentDevices":{"name":"maximumRecentDevices","abstract":"<p>The maximum number of recent devices to store. By default this value is 10 - see: ESPScanner::recentDeviceUUIDs</p>","parent_name":"ESPScanner"},"Classes/ESPSavvyStatus.html#/c:objc(cs)ESPSavvyStatus(im)init":{"name":"-init","abstract":"<p>Initializes savvy status with default values</p>","parent_name":"ESPSavvyStatus"},"Classes/ESPSavvyStatus.html#/c:objc(cs)ESPSavvyStatus(im)initWithData:":{"name":"-initWithData:","abstract":"<p>Initializes the savvy status from a received packet&rsquo;s payload</p>","parent_name":"ESPSavvyStatus"},"Classes/ESPSavvyStatus.html#/c:objc(cs)ESPSavvyStatus(im)initWithSavvyStatus:":{"name":"-initWithSavvyStatus:","abstract":"<p>Initializes the savvy status by copying data from another savvy status</p>","parent_name":"ESPSavvyStatus"},"Classes/ESPSavvyStatus.html#/c:objc(cs)ESPSavvyStatus(im)isEqualToSavvyStatus:":{"name":"-isEqualToSavvyStatus:","abstract":"<p>Tells whether the savvy status is equal to another savvy status</p>","parent_name":"ESPSavvyStatus"},"Classes/ESPSavvyStatus.html#/c:objc(cs)ESPSavvyStatus(py)data":{"name":"data","abstract":"<p>The full payload data of the savvy status</p>","parent_name":"ESPSavvyStatus"},"Classes/ESPSavvyStatus.html#/c:objc(cs)ESPSavvyStatus(py)thresholdKPH":{"name":"thresholdKPH","abstract":"<p>The speed threshold of the savvy, in KPH</p>","parent_name":"ESPSavvyStatus"},"Classes/ESPSavvyStatus.html#/c:objc(cs)ESPSavvyStatus(py)overriddenByUser":{"name":"overriddenByUser","abstract":"<p>Tells whether the savvy thumbwheel has been overridden by the user</p>","parent_name":"ESPSavvyStatus"},"Classes/ESPSavvyStatus.html#/c:objc(cs)ESPSavvyStatus(py)unmuteEnabled":{"name":"unmuteEnabled","abstract":"<p>Tells whether unmute functionality is enabled on the savvy</p>","parent_name":"ESPSavvyStatus"},"Classes/ESPPacket.html#/c:objc(cs)ESPPacket(im)init":{"name":"-init","abstract":"<p>Default initializer that always returns nil; DO NOT CALL</p>","parent_name":"ESPPacket"},"Classes/ESPPacket.html#/c:objc(cs)ESPPacket(im)initWithData:":{"name":"-initWithData:","abstract":"<p>Initializes a packet from a received block of data.</p>","parent_name":"ESPPacket"},"Classes/ESPPacket.html#/c:objc(cs)ESPPacket(im)initWithDestination:origin:packetID:payload:checksum:":{"name":"-initWithDestination:origin:packetID:payload:checksum:","abstract":"<p>Initializes a packet with specified information.</p>","parent_name":"ESPPacket"},"Classes/ESPPacket.html#/c:objc(cs)ESPPacket(im)isEqualToPacket:":{"name":"-isEqualToPacket:","abstract":"<p>Tells if this packet&rsquo;s data is equal to another packet&rsquo;s data</p>","parent_name":"ESPPacket"},"Classes/ESPPacket.html#/c:objc(cs)ESPPacket(im)isChecksumValid":{"name":"-isChecksumValid","abstract":"<p>Verify the checksum. Only perform this check if you know the ESP packet has a checksum. Otherwise, it will most likely fail</p>","parent_name":"ESPPacket"},"Classes/ESPPacket.html#/c:objc(cs)ESPPacket(py)data":{"name":"data","abstract":"<p>The full data of the packet</p>","parent_name":"ESPPacket"},"Classes/ESPPacket.html#/c:objc(cs)ESPPacket(py)destination":{"name":"destination","abstract":"<p>The destination field of the packet.</p>","parent_name":"ESPPacket"},"Classes/ESPPacket.html#/c:objc(cs)ESPPacket(py)origin":{"name":"origin","abstract":"<p>The origin field of the packet</p>","parent_name":"ESPPacket"},"Classes/ESPPacket.html#/c:objc(cs)ESPPacket(py)packetID":{"name":"packetID","abstract":"<p>The packet identifier</p>","parent_name":"ESPPacket"},"Classes/ESPPacket.html#/c:objc(cs)ESPPacket(py)payload":{"name":"payload","abstract":"<p>The payload of the packet, including the checksum (if any)</p>","parent_name":"ESPPacket"},"Classes/ESPFrequencyRange.html#/c:objc(cs)ESPFrequencyRange(im)init":{"name":"-init","abstract":"<p>Initializes a frequency range with a min and max frequency of 0 MHz (null frequency)</p>","parent_name":"ESPFrequencyRange"},"Classes/ESPFrequencyRange.html#/c:objc(cs)ESPFrequencyRange(im)initWithMinMHz:maxMHz:":{"name":"-initWithMinMHz:maxMHz:","abstract":"<p>Initializes a frequency range with the given min and max frequency</p>","parent_name":"ESPFrequencyRange"},"Classes/ESPFrequencyRange.html#/c:objc(cs)ESPFrequencyRange(im)initWithMinGHz:maxGHz:":{"name":"-initWithMinGHz:maxGHz:","abstract":"<p>Initializes a frequency range with the given min and max frequency</p>","parent_name":"ESPFrequencyRange"},"Classes/ESPFrequencyRange.html#/c:objc(cs)ESPFrequencyRange(im)initWithFrequencyRange:":{"name":"-initWithFrequencyRange:","abstract":"<p>Initializes a frequency range with a given frequency range</p>","parent_name":"ESPFrequencyRange"},"Classes/ESPFrequencyRange.html#/c:objc(cs)ESPFrequencyRange(cm)frequencyRangeWithMinMHz:maxMHz:":{"name":"+frequencyRangeWithMinMHz:maxMHz:","abstract":"<p>Returns a frequency range with the given min and max frequency</p>","parent_name":"ESPFrequencyRange"},"Classes/ESPFrequencyRange.html#/c:objc(cs)ESPFrequencyRange(cm)frequencyRangeWithMinGHz:maxGHz:":{"name":"+frequencyRangeWithMinGHz:maxGHz:","abstract":"<p>Returns a frequency range with the given min and max frequency</p>","parent_name":"ESPFrequencyRange"},"Classes/ESPFrequencyRange.html#/c:objc(cs)ESPFrequencyRange(cm)frequencyRangeWithFrequencyRange:":{"name":"+frequencyRangeWithFrequencyRange:","abstract":"<p>Returns a frequency range created by copying the values from a given frequency range</p>","parent_name":"ESPFrequencyRange"},"Classes/ESPFrequencyRange.html#/c:objc(cs)ESPFrequencyRange(cm)nullFrequencyRange":{"name":"+nullFrequencyRange","abstract":"<p>Returns a frequency range where the min and max frequencies are both 0</p>","parent_name":"ESPFrequencyRange"},"Classes/ESPFrequencyRange.html#/c:objc(cs)ESPFrequencyRange(im)isEqualToFrequencyRange:":{"name":"-isEqualToFrequencyRange:","abstract":"<p>Tells if the frequency range is equal to another frequency range</p>","parent_name":"ESPFrequencyRange"},"Classes/ESPFrequencyRange.html#/c:objc(cs)ESPFrequencyRange(im)containsFrequency:":{"name":"-containsFrequency:","abstract":"<p>Tells if a given frequency falls inside the frequency range</p>","parent_name":"ESPFrequencyRange"},"Classes/ESPFrequencyRange.html#/c:objc(cs)ESPFrequencyRange(im)containsFrequencyRange:":{"name":"-containsFrequencyRange:","abstract":"<p>Tells if a another given frequency range falls inside the frequency range</p>","parent_name":"ESPFrequencyRange"},"Classes/ESPFrequencyRange.html#/c:objc(cs)ESPFrequencyRange(im)overlapsFrequencyRange:":{"name":"-overlapsFrequencyRange:","abstract":"<p>Tells if the frequency range overlaps another frequency range</p>","parent_name":"ESPFrequencyRange"},"Classes/ESPFrequencyRange.html#/c:objc(cs)ESPFrequencyRange(im)splitRangeToFitSections:":{"name":"-splitRangeToFitSections:","abstract":"<p>Splits a frequency range to fit inside other frequency ranges</p>","parent_name":"ESPFrequencyRange"},"Classes/ESPFrequencyRange.html#/c:objc(cs)ESPFrequencyRange(im)isNull":{"name":"-isNull","abstract":"<p>Tells if the given range has a min and max frequency of 0</p>","parent_name":"ESPFrequencyRange"},"Classes/ESPFrequencyRange.html#/c:objc(cs)ESPFrequencyRange(py)minMHz":{"name":"minMHz","abstract":"<p>The lower bound frequency in MHz</p>","parent_name":"ESPFrequencyRange"},"Classes/ESPFrequencyRange.html#/c:objc(cs)ESPFrequencyRange(py)minGHz":{"name":"minGHz","abstract":"<p>The lower bound frequency in GHz</p>","parent_name":"ESPFrequencyRange"},"Classes/ESPFrequencyRange.html#/c:objc(cs)ESPFrequencyRange(py)maxMHz":{"name":"maxMHz","abstract":"<p>The upper bound frequency in MHz</p>","parent_name":"ESPFrequencyRange"},"Classes/ESPFrequencyRange.html#/c:objc(cs)ESPFrequencyRange(py)maxGHz":{"name":"maxGHz","abstract":"<p>The upper bound frequency in GHz</p>","parent_name":"ESPFrequencyRange"},"Classes/ESPFrequencyRange.html#/c:objc(cs)ESPFrequencyRange(cm)arrayByRemovingNullFrequencyRangesFromArray:":{"name":"+arrayByRemovingNullFrequencyRangesFromArray:","abstract":"<p>Creates a new array from the input array and removes any frequency ranges with a min and max of 0</p>","parent_name":"ESPFrequencyRange"},"Classes/ESPDisplayData.html#/c:objc(cs)ESPDisplayData(im)init":{"name":"-init","abstract":"<p>Default initializer that always returns nil; DO NOT CALL</p>","parent_name":"ESPDisplayData"},"Classes/ESPDisplayData.html#/c:objc(cs)ESPDisplayData(im)initWithData:":{"name":"-initWithData:","abstract":"<p>Initializes the display data from a received packet&rsquo;s payload</p>","parent_name":"ESPDisplayData"},"Classes/ESPDisplayData.html#/c:objc(cs)ESPDisplayData(im)initWithDisplayData:":{"name":"-initWithDisplayData:","abstract":"<p>Initialized the display data by copying from an existing display data object</p>","parent_name":"ESPDisplayData"},"Classes/ESPDisplayData.html#/c:objc(cs)ESPDisplayData(py)data":{"name":"data","abstract":"<p>The full payload data of the display data</p>","parent_name":"ESPDisplayData"},"Classes/ESPDisplayData.html#/c:objc(cs)ESPDisplayData(py)segmentA":{"name":"segmentA","abstract":"<p>Top segment of the seven segment display on the ESP device</p>","parent_name":"ESPDisplayData"},"Classes/ESPDisplayData.html#/c:objc(cs)ESPDisplayData(py)segmentB":{"name":"segmentB","abstract":"<p>Upper right segment of the seven segment display on the ESP device</p>","parent_name":"ESPDisplayData"},"Classes/ESPDisplayData.html#/c:objc(cs)ESPDisplayData(py)segmentC":{"name":"segmentC","abstract":"<p>Lower right segment of the seven segment display on the ESP device</p>","parent_name":"ESPDisplayData"},"Classes/ESPDisplayData.html#/c:objc(cs)ESPDisplayData(py)segmentD":{"name":"segmentD","abstract":"<p>Bottom segment of the seven segment display on the ESP device</p>","parent_name":"ESPDisplayData"},"Classes/ESPDisplayData.html#/c:objc(cs)ESPDisplayData(py)segmentE":{"name":"segmentE","abstract":"<p>Lower left segment of the seven segment display on the ESP device</p>","parent_name":"ESPDisplayData"},"Classes/ESPDisplayData.html#/c:objc(cs)ESPDisplayData(py)segmentF":{"name":"segmentF","abstract":"<p>Upper left segment of the seven segment display on the ESP device</p>","parent_name":"ESPDisplayData"},"Classes/ESPDisplayData.html#/c:objc(cs)ESPDisplayData(py)segmentG":{"name":"segmentG","abstract":"<p>Middle segment of the seven segment display on the ESP device</p>","parent_name":"ESPDisplayData"},"Classes/ESPDisplayData.html#/c:objc(cs)ESPDisplayData(py)decimalPoint":{"name":"decimalPoint","abstract":"<p>Decimal point of the seven segment display on the ESP device</p>","parent_name":"ESPDisplayData"},"Classes/ESPDisplayData.html#/c:objc(cs)ESPDisplayData(im)strengthLightAtIndex:":{"name":"-strengthLightAtIndex:","abstract":"<p>Tells whether the specified bargraph strength light is on</p>","parent_name":"ESPDisplayData"},"Classes/ESPDisplayData.html#/c:objc(cs)ESPDisplayData(py)strengthLightCount":{"name":"strengthLightCount","abstract":"<p>The total number of strength lights on the ESP device (8)</p>","parent_name":"ESPDisplayData"},"Classes/ESPDisplayData.html#/c:objc(cs)ESPDisplayData(py)strengthLight0":{"name":"strengthLight0","abstract":"<p>The state of bargraph strength light 0</p>","parent_name":"ESPDisplayData"},"Classes/ESPDisplayData.html#/c:objc(cs)ESPDisplayData(py)strengthLight1":{"name":"strengthLight1","abstract":"<p>The state of bargraph strength light 1</p>","parent_name":"ESPDisplayData"},"Classes/ESPDisplayData.html#/c:objc(cs)ESPDisplayData(py)strengthLight2":{"name":"strengthLight2","abstract":"<p>The state of bargraph strength light 2</p>","parent_name":"ESPDisplayData"},"Classes/ESPDisplayData.html#/c:objc(cs)ESPDisplayData(py)strengthLight3":{"name":"strengthLight3","abstract":"<p>The state of bargraph strength light 3</p>","parent_name":"ESPDisplayData"},"Classes/ESPDisplayData.html#/c:objc(cs)ESPDisplayData(py)strengthLight4":{"name":"strengthLight4","abstract":"<p>The state of bargraph strength light 4</p>","parent_name":"ESPDisplayData"},"Classes/ESPDisplayData.html#/c:objc(cs)ESPDisplayData(py)strengthLight5":{"name":"strengthLight5","abstract":"<p>The state of bargraph strength light 5</p>","parent_name":"ESPDisplayData"},"Classes/ESPDisplayData.html#/c:objc(cs)ESPDisplayData(py)strengthLight6":{"name":"strengthLight6","abstract":"<p>The state of bargraph strength light 6</p>","parent_name":"ESPDisplayData"},"Classes/ESPDisplayData.html#/c:objc(cs)ESPDisplayData(py)strengthLight7":{"name":"strengthLight7","abstract":"<p>The state of bargraph strength light 7</p>","parent_name":"ESPDisplayData"},"Classes/ESPDisplayData.html#/c:objc(cs)ESPDisplayData(py)laser":{"name":"laser","abstract":"<p>The display state of the laser &ldquo;band&rdquo;</p>","parent_name":"ESPDisplayData"},"Classes/ESPDisplayData.html#/c:objc(cs)ESPDisplayData(py)Ka":{"name":"Ka","abstract":"<p>The display state of the Ka band</p>","parent_name":"ESPDisplayData"},"Classes/ESPDisplayData.html#/c:objc(cs)ESPDisplayData(py)K":{"name":"K","abstract":"<p>The display state of the K band</p>","parent_name":"ESPDisplayData"},"Classes/ESPDisplayData.html#/c:objc(cs)ESPDisplayData(py)X":{"name":"X","abstract":"<p>The display state of the X band</p>","parent_name":"ESPDisplayData"},"Classes/ESPDisplayData.html#/c:objc(cs)ESPDisplayData(py)front":{"name":"front","abstract":"<p>The display state of the front arrow</p>","parent_name":"ESPDisplayData"},"Classes/ESPDisplayData.html#/c:objc(cs)ESPDisplayData(py)side":{"name":"side","abstract":"<p>The display state of the side arrow</p>","parent_name":"ESPDisplayData"},"Classes/ESPDisplayData.html#/c:objc(cs)ESPDisplayData(py)rear":{"name":"rear","abstract":"<p>The display state of the rear arrow</p>","parent_name":"ESPDisplayData"},"Classes/ESPDisplayData.html#/c:objc(cs)ESPDisplayData(py)mute":{"name":"mute","abstract":"<p>Tells whether the mute light is lit (This value is only meaningful on versin V4.1018 and above)</p>","parent_name":"ESPDisplayData"},"Classes/ESPDisplayData.html#/c:objc(cs)ESPDisplayData(py)bluetooth":{"name":"bluetooth","abstract":"<p>Tells whether the Bluetooth light is lit (This value is only meaningful on versin V4.1018 and above)</p>","parent_name":"ESPDisplayData"},"Classes/ESPDisplayData.html#/c:objc(cs)ESPDisplayData(py)soft":{"name":"soft","abstract":"<p>Tells the current mute status. (NO means not muted, YES means muted)</p>","parent_name":"ESPDisplayData"},"Classes/ESPDisplayData.html#/c:objc(cs)ESPDisplayData(py)tsHoldoff":{"name":"tsHoldoff","abstract":"<p>Tells the accessories if a time slice is allowed. (NO means that all accessories can have a time slice after this packet, YES means that none of the accessories can have a time slice after this packet)</p>","parent_name":"ESPDisplayData"},"Classes/ESPDisplayData.html#/c:objc(cs)ESPDisplayData(py)systemStatus":{"name":"systemStatus","abstract":"<p>Tells whether the ESP device is actively searching for alerts. (NO means the device is not actively searching for alerts, YES means that the device has successfully signed on and is actively searching for alerts)</p>","parent_name":"ESPDisplayData"},"Classes/ESPDisplayData.html#/c:objc(cs)ESPDisplayData(py)displayOn":{"name":"displayOn","abstract":"<p>Tells the ESP device&rsquo;s front display status (NO means off, YES means on)</p>","parent_name":"ESPDisplayData"},"Classes/ESPDisplayData.html#/c:objc(cs)ESPDisplayData(py)euroMode":{"name":"euroMode","abstract":"<p>Tells whether euro mode is enabled (NO means disabled, YES means enabled)</p>","parent_name":"ESPDisplayData"},"Classes/ESPDisplayData.html#/c:objc(cs)ESPDisplayData(py)customSweep":{"name":"customSweep","abstract":"<p>Tells the custom sweep status (NO means custom sweeps have not been defined, YES means that custom sweeps have been defined and custom modes will be used if in euro mode)</p>","parent_name":"ESPDisplayData"},"Classes/ESPDisplayData.html#/c:objc(cs)ESPDisplayData(py)legacy":{"name":"legacy","abstract":"<p>Tells whether the ESP device is operating in legacy mode (NO means normal operation, YES means legacy mode)</p>","parent_name":"ESPDisplayData"},"Classes/ESPDisplayData.html#/c:objc(cs)ESPDisplayData(py)mode":{"name":"mode","abstract":"<p>Tells the current mode of the V1. The mode is determined by reading the seven segment display data and the systemStatus bit. If the mode cannot be determined from the seven segment display, the mode is ESPV1ModeUnknown</p>","parent_name":"ESPDisplayData"},"Classes/ESPDisplayData.html#/c:objc(cs)ESPDisplayData(py)junk":{"name":"junk","abstract":"<p>Tells whether the V1 is indicating a junk signal. This is determined by reading the seven segment display data and the systemStatus bit.</p>","parent_name":"ESPDisplayData"},"Classes/ESPDisplayData.html#/c:objc(cs)ESPDisplayData(py)error":{"name":"error","abstract":"<p>Tells whether the V1 is indicating an error. This is determined by reading the seven segment display state, the strength lights, and the arrow lights.</p>","parent_name":"ESPDisplayData"},"Classes/ESPDisplayData.html#/c:objc(cs)ESPDisplayData(im)isLaserAlerting":{"name":"-isLaserAlerting","abstract":"<p>Method to determine if a &ldquo;laser&rdquo; alert is present. This value is determined by a bit-wise AND of the laser property and systemStatus and front or rear properties.</p>","parent_name":"ESPDisplayData"},"Classes/ESPCustomSweepData.html#/c:objc(cs)ESPCustomSweepData(im)init":{"name":"-init","abstract":"<p>Default initializer that always returns nil; DO NOT CALL</p>","parent_name":"ESPCustomSweepData"},"Classes/ESPCustomSweepData.html#/c:objc(cs)ESPCustomSweepData(im)initWithData:":{"name":"-initWithData:","abstract":"<p>Initializes a custom sweep from a received packet&rsquo;s payload</p>","parent_name":"ESPCustomSweepData"},"Classes/ESPCustomSweepData.html#/c:objc(cs)ESPCustomSweepData(im)initWithIndex:range:commit:":{"name":"-initWithIndex:range:commit:","abstract":"<p>Initializes a custom sweep with an index, frequency range, and commit bit</p>","parent_name":"ESPCustomSweepData"},"Classes/ESPCustomSweepData.html#/c:objc(cs)ESPCustomSweepData(im)initWithIndex:lowerEdge:upperEdge:commit:":{"name":"-initWithIndex:lowerEdge:upperEdge:commit:","abstract":"<p>Initializes a custom sweep with an index, frequency range, and commit bit</p>","parent_name":"ESPCustomSweepData"},"Classes/ESPCustomSweepData.html#/c:objc(cs)ESPCustomSweepData(im)initWithCustomSweepData:":{"name":"-initWithCustomSweepData:","abstract":"<p>Initializes a custom sweep by copying data from another custom sweep</p>","parent_name":"ESPCustomSweepData"},"Classes/ESPCustomSweepData.html#/c:objc(cs)ESPCustomSweepData(py)data":{"name":"data","abstract":"<p>The full payload data of the custom sweep</p>","parent_name":"ESPCustomSweepData"},"Classes/ESPCustomSweepData.html#/c:objc(cs)ESPCustomSweepData(py)range":{"name":"range","abstract":"<p>The range of the sweep</p>","parent_name":"ESPCustomSweepData"},"Classes/ESPCustomSweepData.html#/c:objc(cs)ESPCustomSweepData(py)commit":{"name":"commit","abstract":"<p>The commit bit of the sweep</p>","parent_name":"ESPCustomSweepData"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)sendPacket:":{"name":"-sendPacket:","abstract":"<p>Send an ESPPacket to the ESP device.</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)sendData:":{"name":"-sendData:","abstract":"<p>Send data to the ESP device.</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)didReceivePacket:":{"name":"-didReceivePacket:","abstract":"<p>This method is called whenever a valid ESPPacket is received. This method forwards received packets to their delegate methods, so the super method should be called when overriding.</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)didReceivePacketWithBadChecksum:":{"name":"-didReceivePacketWithBadChecksum:","abstract":"<p>This method is called whenever an ESPPacket with a bad checksum is received.</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestVersionFrom:completion:":{"name":"-requestVersionFrom:completion:","abstract":"<p>Requests the version number of the ESP device or one of its accessories</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestSerialNumberFrom:completion:":{"name":"-requestSerialNumberFrom:completion:","abstract":"<p>Requests the serial number of the ESP device or one of its accessories</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestUserBytesDataFrom:completion:":{"name":"-requestUserBytesDataFrom:completion:","abstract":"<p>Requests the user bytes data of the ESP device</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestUserDataBytes:":{"name":"-requestUserDataBytes:","abstract":"<p>Requests the user bytes data of the Valentine One</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestUserBytesFrom:forV1Version:completion:":{"name":"-requestUserBytesFrom:forV1Version:completion:","abstract":"<p>Requests the user bytes of the ESP device</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestUserBytesforV1Version:completion:":{"name":"-requestUserBytesforV1Version:completion:","abstract":"<p>Requests the user bytes of the Valentine One</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestWriteUserBytes:target:completion:":{"name":"-requestWriteUserBytes:target:completion:","abstract":"<p>Writes the given user bytes to the ESP device</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestWriteUserBytes:completion:":{"name":"-requestWriteUserBytes:completion:","abstract":"<p>Writes the given user bytes to the Valentine On</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestWriteFactoryDefaultFor:completion:":{"name":"-requestWriteFactoryDefaultFor:completion:","abstract":"<p>Requests the ESP device or one of its accessories to set its factory default settings</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestWriteSweepDefinition:target:":{"name":"-requestWriteSweepDefinition:target:","abstract":"<p>Writes a single sweep definition to the ESP device</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestWriteSweepDefinition:":{"name":"-requestWriteSweepDefinition:","abstract":"<p>Writes a single sweep definition to the Valentine One</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestWriteSweepDefinitions:target:completion:":{"name":"-requestWriteSweepDefinitions:target:completion:","abstract":"<p>Writes all the given custom sweeps to the ESP device</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestWriteSweepDefinitions:completion:":{"name":"-requestWriteSweepDefinitions:completion:","abstract":"<p>Writes all the given custom sweeps to the Valentine One</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestAllSweepDefinitionsFrom:completion:":{"name":"-requestAllSweepDefinitionsFrom:completion:","abstract":"<p>Requests the sweep definitions from the ESP device. Some of the definitions returned may have frequencies of (0,0). These sweeps are not used and are considered &ldquo;null&rdquo; sweeps.</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestAllSweepDefinitions:":{"name":"-requestAllSweepDefinitions:","abstract":"<p>Requests the sweep definitions from the Valentine One. Some of the definitions returned may have frequencies of (0,0). These sweeps are not used and are considered &ldquo;null&rdquo; sweeps.</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestWriteDefaultSweepsFor:completion:":{"name":"-requestWriteDefaultSweepsFor:completion:","abstract":"<p>Requests the ESP device to reset its custom sweeps to the defaults</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestWriteDefaultSweeps:":{"name":"-requestWriteDefaultSweeps:","abstract":"<p>Requests the Valentine One to reset its custom sweeps to the defaults</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestMaxSweepIndexFrom:completion:":{"name":"-requestMaxSweepIndexFrom:completion:","abstract":"<p>Requests the max sweep index from the ESP device</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestMaxSweepIndex:":{"name":"-requestMaxSweepIndex:","abstract":"<p>Requests the max sweep index from the Valentine One</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestSweepSectionsFrom:completion:":{"name":"-requestSweepSectionsFrom:completion:","abstract":"<p>Requests the available custom sweep sections from the ESP device. Some of the sections returned may have frequencies of (0,0). These sections are not used and are considered &ldquo;null&rdquo; sections</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestSweepSections:":{"name":"-requestSweepSections:","abstract":"<p>Requests the available custom sweep sections from the Valentine One. Some of the sections returned may have frequencies of (0,0). These sections are not used and are considered &ldquo;null&rdquo; sections</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestDefaultSweepDefinitionsFrom:completion:":{"name":"-requestDefaultSweepDefinitionsFrom:completion:","abstract":"<p>Requests the default custom sweep definitions from the ESP device. Some of the definitions returned may have frequencies of (0,0). These sweeps are not used and are considered &ldquo;null&rdquo; sweeps</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestDefaultSweepDefinitions:":{"name":"-requestDefaultSweepDefinitions:","abstract":"<p>Requests the default custom sweep definitions from the Valentine One. Some of the definitions returned may have frequencies of (0,0). These sweeps are not used and are considered &ldquo;null&rdquo; sweeps</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestTurnOffMainDisplayFor:completion:":{"name":"-requestTurnOffMainDisplayFor:completion:","abstract":"<p>Requests the ESP device to turn off its main display</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestTurnOnMainDisplayFor:completion:":{"name":"-requestTurnOnMainDisplayFor:completion:","abstract":"<p>Requests the ESP device to turn on its main display</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestMuteOnFor:completion:":{"name":"-requestMuteOnFor:completion:","abstract":"<p>Requests the ESP device to mute the current alerts</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestMuteOn:":{"name":"-requestMuteOn:","abstract":"<p>Requests the Valentine One to mute the current alerts</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestMuteOffFor:completion:":{"name":"-requestMuteOffFor:completion:","abstract":"<p>Requests the ESP device to unmute all alerts that weren&rsquo;t muted by the ESP device&rsquo;s internal logic</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestMuteOff:":{"name":"-requestMuteOff:","abstract":"<p>Requests the Valentine One to unmute all alerts that weren&rsquo;t muted by the Valentine One&rsquo;s internal logic</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestChangeMode:target:completion:":{"name":"-requestChangeMode:target:completion:","abstract":"<p>Requests the ESP device to change its mode</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestChangeMode:completion:":{"name":"-requestChangeMode:completion:","abstract":"<p>Requests the Valentine One to change its mode</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestCurrentVolumeFrom:completion:":{"name":"-requestCurrentVolumeFrom:completion:","abstract":"<p>Requests the current volume settings of the ESP device</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestCurrentVolume:":{"name":"-requestCurrentVolume:","abstract":"<p>Requests the current volume settings of the Valentine One</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestWriteVolume:target:completion:":{"name":"-requestWriteVolume:target:completion:","abstract":"<p>Writes the given volume settings bytes to the ESP device</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestWriteVolume:completion:":{"name":"-requestWriteVolume:completion:","abstract":"<p>Writes the given volume settings to the Valentine On</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestStartAlertDataFor:completion:":{"name":"-requestStartAlertDataFor:completion:","abstract":"<p>Requests alert data to start being received from the ESP device to the current delegate</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestStartAlertData:":{"name":"-requestStartAlertData:","abstract":"<p>Requests alert data to start being received from the Valentine One to the current delegate</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestStopAlertDataFor:completion:":{"name":"-requestStopAlertDataFor:completion:","abstract":"<p>Requests alert data to stop being received from the ESP device to the current delegate</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestStopAlertData:":{"name":"-requestStopAlertData:","abstract":"<p>Requests alert data to stop being received from the Valentine One to the current delegate</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestBatteryVoltageFrom:completion:":{"name":"-requestBatteryVoltageFrom:completion:","abstract":"<p>Requests the current battery voltage of the ESP device</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestBatteryVoltage:":{"name":"-requestBatteryVoltage:","abstract":"<p>Requests the current battery voltage of the Valentine One</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestSavvyStatusFrom:completion:":{"name":"-requestSavvyStatusFrom:completion:","abstract":"<p>Requests the current savvy status from the ESP device</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestSavvyStatus:":{"name":"-requestSavvyStatus:","abstract":"<p>Requests the current savvy status from the Savvy accessory</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestVehicleSpeedFrom:completion:":{"name":"-requestVehicleSpeedFrom:completion:","abstract":"<p>Requests the current vehicle speed from the ESP device</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestVehicleSpeed:":{"name":"-requestVehicleSpeed:","abstract":"<p>Requests the current vehicle speed from the Savvy accessory</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestOverrideThumbwheel:target:completion:":{"name":"-requestOverrideThumbwheel:target:completion:","abstract":"<p>Requests the thumbwheel speed of the ESP device to be overridden</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestOverrideThumbwheel:completion:":{"name":"-requestOverrideThumbwheel:completion:","abstract":"<p>Requests the thumbwheel speed of the Savvy to be overridden</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestSetSavvyUnmuteEnabled:target:completion:":{"name":"-requestSetSavvyUnmuteEnabled:target:completion:","abstract":"<p>Enables or disables the unmute functionality of the ESP device</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(im)requestSetSavvyUnmuteEnabled:completion:":{"name":"-requestSetSavvyUnmuteEnabled:completion:","abstract":"<p>Enables or disables the unmute functionality of the Savvy</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(py)delegate":{"name":"delegate","abstract":"<p>The delegate object to receive ESPClient events</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(py)peripheral":{"name":"peripheral","abstract":"<p>the CBPeripheral object that handles the BLE connection to the ESP device</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(py)legacy":{"name":"legacy","abstract":"<p>Tells whether the ESP device is in legacy mode or not. This property may be NO by default until enough display data packets are received with the legacy bit set to confirm that the ESP device is in legacy mode</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(py)checksums":{"name":"checksums","abstract":"<p>Tells whether the ESP device uses checksums. This property may be NO by default until enough packets are recieved to tell whether the ESP device has checksums</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(py)connected":{"name":"connected","abstract":"<p>Tells whether the client is connected. Once disconnected, this specific client instance will never be reconnected and the ESPScanner class must be used to connect a new client</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(py)powerLossDetected":{"name":"powerLossDetected","abstract":"<p>Tells whether a power loss has been detected. This means that a packet has not been received within the powerLossTimeout. - see: ESPClient::powerLossTimeout</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(py)powerLossTimeout":{"name":"powerLossTimeout","abstract":"<p>The amount of time after receiving a packet to &ldquo;detect&rdquo; a power loss if no further packets are received. The default value is 5 seconds</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(py)requestTimeout":{"name":"requestTimeout","abstract":"<p>The amount of time to wait after a request is sent for it to time out. The default value is 5 seconds</p>","parent_name":"ESPClient"},"Classes/ESPClient.html#/c:objc(cs)ESPClient(py)reportsEchoedPackets":{"name":"reportsEchoedPackets","abstract":"<p>Controls whether echo packets (packets sent to the V1 that are re-sent back to the client) should be recognized or not. Default value is NO</p>","parent_name":"ESPClient"},"Classes/ESPAlertData.html#/c:objc(cs)ESPAlertData(im)init":{"name":"-init","abstract":"<p>Default initializer that always returns nil; DO NOT CALL</p>","parent_name":"ESPAlertData"},"Classes/ESPAlertData.html#/c:objc(cs)ESPAlertData(im)initWithData:":{"name":"-initWithData:","abstract":"<p>Initializes the alert from a received packet&rsquo;s payload</p>","parent_name":"ESPAlertData"},"Classes/ESPAlertData.html#/c:objc(cs)ESPAlertData(im)initWithAlertData:":{"name":"-initWithAlertData:","abstract":"<p>Initializes a new alert by copying information from an existing alert</p>","parent_name":"ESPAlertData"},"Classes/ESPAlertData.html#/c:objc(cs)ESPAlertData(im)isEqualToAlertData:":{"name":"-isEqualToAlertData:","abstract":"<p>Tells if the given alert is equal to this alert</p>","parent_name":"ESPAlertData"},"Classes/ESPAlertData.html#/c:objc(cs)ESPAlertData(py)data":{"name":"data","abstract":"<p>The full payload data of the alert</p>","parent_name":"ESPAlertData"},"Classes/ESPAlertData.html#/c:objc(cs)ESPAlertData(py)count":{"name":"count","abstract":"<p>The number of alerts in the alert table</p>","parent_name":"ESPAlertData"},"Classes/ESPAlertData.html#/c:objc(cs)ESPAlertData(py)frequency":{"name":"frequency","abstract":"<p>The frequency of the alert</p>","parent_name":"ESPAlertData"},"Classes/ESPAlertData.html#/c:objc(cs)ESPAlertData(py)frontSignalStrength":{"name":"frontSignalStrength","abstract":"<p>The front signal strength (0-255)</p>","parent_name":"ESPAlertData"},"Classes/ESPAlertData.html#/c:objc(cs)ESPAlertData(py)rearSignalStrength":{"name":"rearSignalStrength","abstract":"<p>The rear signal strength (0-255)</p>","parent_name":"ESPAlertData"},"Classes/ESPAlertData.html#/c:objc(cs)ESPAlertData(py)alertSignalStrength":{"name":"alertSignalStrength","abstract":"<p>The alert signal strength to use for the bargraph (0-255)</p>","parent_name":"ESPAlertData"},"Classes/ESPAlertData.html#/c:objc(cs)ESPAlertData(py)bargraphSignalStrength":{"name":"bargraphSignalStrength","abstract":"<p>The bargraph strength indicator strength (0-8)</p>","parent_name":"ESPAlertData"},"Classes/ESPAlertData.html#/c:objc(cs)ESPAlertData(py)priority":{"name":"priority","abstract":"<p>Tells if this alert is a priority alert</p>","parent_name":"ESPAlertData"},"Classes/ESPAlertData.html#/c:objc(cs)ESPAlertData(py)direction":{"name":"direction","abstract":"<p>The direction of the alert</p>","parent_name":"ESPAlertData"},"Classes/ESPAlertData.html#/c:objc(cs)ESPAlertData(py)band":{"name":"band","abstract":"<p>The band of the alert</p>","parent_name":"ESPAlertData"},"Classes/ESPAlertData.html#/c:objc(cs)ESPAlertData(py)deviance":{"name":"deviance","abstract":"<p>Represents how far an alert may deviate in its frequency</p>","parent_name":"ESPAlertData"},"Classes/ESPAlertData.html":{"name":"ESPAlertData","abstract":"<p>A packet that represents an alert detected by the Valentine One.</p>"},"Classes/ESPClient.html":{"name":"ESPClient","abstract":"<p>Class used for interacting with an ESP device. This class is responsible for receiving and dispatching ESP packets.</p>"},"Classes/ESPCustomSweepData.html":{"name":"ESPCustomSweepData","abstract":"<p>A packet that represents a single custom sweep (sweep definition) received from the Valentine One.</p>"},"Classes/ESPDisplayData.html":{"name":"ESPDisplayData","abstract":"<p>A packet that represents an &lsquo;InfDisplayData&rsquo; received from the Valentine One. You can use the data from this packet to recreate the Valentine One&rsquo;s display.</p>"},"Classes/ESPFrequencyRange.html":{"name":"ESPFrequencyRange","abstract":"<p>Stores a frequency range. This class internally uses ESPFrequencyMHz to store the frequencies, so its precision is limited to what the ESPFrequencyMHz datatype can store</p>"},"Classes/ESPPacket.html":{"name":"ESPPacket","abstract":"<p>A packet that can be sent through an ESPClient. This class represents the data structure which data is transmitted and received between the ESP devices.</p>"},"Classes/ESPSavvyStatus.html":{"name":"ESPSavvyStatus","abstract":"<p>The &ldquo;status&rdquo; of a SAVVY ESP device.</p>"},"Classes/ESPScanner.html":{"name":"ESPScanner","abstract":"<p>Class used for discovering/connecting a peripheral device that uses the ESP Service and starting the ESPLibrary.</p>"},"Classes/ESPUserBytes.html":{"name":"ESPUserBytes","abstract":"<p>The &ldquo;user bytes&rdquo; of an ESP device. For more info on the V1&rsquo;s internal settings, see <a href=\"http://www.valentine1.com/Lab/techreport3.asp\">http://www.valentine1.com/Lab/techreport3.asp</a></p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Constants.html":{"name":"Constants","abstract":"<p>The following constants are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Type%20Definitions.html":{"name":"Type Definitions","abstract":"<p>The following type definitions are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"}}